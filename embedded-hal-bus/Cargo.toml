[package]
authors = [
  "The Embedded HAL Team and Contributors <embedded-hal@teams.rust-embedded.org>",
]
categories = ["embedded", "hardware-support", "no-std"]
description = "Bus/Device connection mechanisms for embedded-hal, a Hardware Abstraction Layer (HAL) for embedded systems"
documentation = "https://docs.rs/embedded-hal-bus"
edition = "2021"
rust-version = "1.81"
keywords = ["hal", "IO"]
license = "MIT OR Apache-2.0"
name = "embedded-hal-bus"
readme = "README.md"
repository = "https://github.com/rust-embedded/embedded-hal"
version = "0.3.0"

[features]
# Enable shared bus implementations using `std::sync::Mutex`
std = ["alloc", "mutex/std"]
# Use `portable-atomic` to enable `atomic-device` on devices without native atomic CAS
#
# `portable-atomic` emulates atomic CAS functionality, allowing `embedded-hal-bus` to use `atomic-device` on hardware
# that does not natively support atomic CAS. If you enable this, you must also add `portable-atomic` to your crate with
# a feature flag such as `unsafe-assume-single-core` or `critical-section` to choose how atomic CAS is implemented.
# See https://docs.rs/portable-atomic/1.7.0/portable_atomic/#optional-features for more info.
portable-atomic = ["dep:portable-atomic"]
# Enable `embedded-hal-async` support.
async = ["dep:embedded-hal-async"]
# Derive `defmt::Format` from `defmt` 0.3 for enums and structs. See https://github.com/knurling-rs/defmt for more info
defmt-03 = ["dep:defmt-03", "embedded-hal/defmt-03", "embedded-hal-async?/defmt-03"]
# Enables additional utilities requiring a global allocator.
alloc = []

[dependencies]
embedded-hal = { version = "1.0.0", path = "../embedded-hal" }
embedded-hal-async = { version = "1.0.0", path = "../embedded-hal-async", optional = true }
critical-section = { version = "1.0" }
defmt-03 = { package = "defmt", version = "0.3", optional = true }
portable-atomic = {version = "1.3", default-features = false, optional = true, features = ["require-cas"]}
mutex = "1.0"

[package.metadata.docs.rs]
features = ["std", "async"]
rustdoc-args = ["--cfg", "docsrs"]
